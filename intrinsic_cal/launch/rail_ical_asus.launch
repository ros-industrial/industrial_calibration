<?xml version="1.0" ?>
<launch>

   <arg name="ir" default="false" />

   <arg name="asus_device_id" value="3@1"/>
   <arg name="asus_camera_name" value="camera"/>
   <arg name="asus_calprefix" value="1"/>
   <arg name="rgb_camera_info_url" value="file://$(find intrinsic_cal)/camera_info/$(arg asus_calprefix)_rgb.yaml" />
   <arg name="depth_camera_info_url" value="file://$(find intrinsic_cal)/camera_info/$(arg asus_calprefix)_ir.yaml" />
   <arg name="rgb_frame_id" value="camera_rgb_optical_frame"/>
   <arg name="depth_frame_id" value="camera_depth_optical_frame"/>

   <!-- Launch the asus camera node -->
   <include file="$(find openni2_launch)/launch/openni2.launch" >
     <!--arg name="topic_ns" value="$(arg asus_camera_name)" />
     <arg name="tf_prefix" value="$(arg asus_camera_name)"/>
     <arg name="cal_prefix" value="$(arg asus_calprefix)" /-->

     <arg name="rgb_frame_id" value="$(arg rgb_frame_id)"/>
     <arg name="depth_frame_id" value="$(arg depth_frame_id)"/>
     <arg name="rgb_camera_info_url" value="$(arg rgb_camera_info_url)"/>
     <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)"/>
     <arg name="depth_registration" value="false"/>
     <arg name="color_depth_synchronization" value="false" />
     <arg name="auto_exposure" value="true" />
     <arg name="auto_white_balance" value="true" />
     <arg name="rgb_processing"                  value="true"  />
     <arg name="debayer_processing"              value="false" />
     <arg name="ir_processing"                   value="false" />
     <arg name="depth_processing"                value="true" />
     <arg name="depth_registered_processing"     value="true" />
     <arg name="disparity_processing"            value="true" />
     <arg name="disparity_registered_processing" value="true" />
     <arg name="device_id" value="$(arg asus_device_id)" />
     <arg name="publish_tf" value="true" />
   </include> 

     <node pkg="intrinsic_cal" type="rail_ical" name="rail_intrinsic_calibration" output="screen" >

          <param name="camera_name" value="$(arg asus_camera_name)/ir" if="$(arg ir)"/>
          <param name="image_topic" value="$(arg asus_camera_name)/ir/image" if="$(arg ir)"/>

          <param name="camera_name" value="$(arg asus_camera_name)/rgb" unless="$(arg ir)"/>
          <param name="image_topic" value="$(arg asus_camera_name)/rgb/image_raw" unless="$(arg ir)"/>
          <remap from="color_image" to="/$(arg asus_camera_name)/rgb/image_raw" unless="$(arg ir)"/>

          <param name="target_rows" value="20" />
          <param name="target_cols" value="33" />
          <param name="target_circle_dia" value="0.0063" />
          <param name="target_spacing" value="0.025393" />
          <param name="num_camera_locations" value="8" />
          <param name="camera_spacing" value="0.050" />
          <param name="target_to_rail_distance" value="0.406" />
     </node>

  
  <node name="observation_view" pkg="image_view" type="image_view" >
      <remap to="/observer_results_image" from="image"/>
  </node>

  <group unless="$(arg ir)" >
    <node name="asus_view" pkg="image_view" type="image_view" >
        <remap to="$(arg asus_camera_name)/rgb/image_raw" from="image"/>
    </node>

    <node name="center_view" pkg="image_view" type="image_view" >
        <remap to="/color_image_center" from="image"/>
    </node>
  </group>

</launch>
