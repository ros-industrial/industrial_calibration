<?xml version="1.0" ?>
<launch>

  <!-- Camera and depth correction nodelet-->
  <arg name="file" default="camera" />
  <arg name="camera" default="kinect" />
  
  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="publish_tf" value="false" />
    <arg name="camera" value="$(arg camera)" />
    <arg name="depth_registration" default="true" />
    <!-- arg name="device_id" value="3@1"/ -->
    <arg name="rgb_camera_info_url"   value="file://$(find rgbd_depth_correction)/yaml/kinect_rgb_PS1080_PrimeSense.yaml" />
    <arg name="depth_camera_info_url" value="file://$(find rgbd_depth_correction)/yaml/kinect_depth_PS1080_PrimeSense.yaml" />
  </include>

  <node pkg="nodelet" type="nodelet" name="rgbd_depth_correction" args="load rgbd_depth_correction/DepthCorrectionNodelet $(arg camera)/$(arg camera)_nodelet_manager no-bond" output="screen">

    <param name="filename" value="/$(arg file)" />
    <param name="filepath" value="$(find rgbd_depth_correction)/yaml" />
    <remap from="/$(arg camera)/in_cloud" to="/$(arg camera)/depth_registered/points"/>
    <remap from="/$(arg camera)/out_cloud" to="/$(arg camera)/depth/corrected_points" />
  </node>

  <!-- Extrinsic calibration node -->
  <arg name="gui" value="True" />
  <arg name="cal_pkg_name" value="rgbd_depth_correction" />
  <arg name="cal_pkg_path" value="$(find rgbd_depth_correction)" />
  <arg name="urdf_path" value="$(find rgbd_depth_correction)/urdf/camera_scene.urdf" />
  <arg name="camera_ns" value="$(arg camera)" />

  <node pkg="industrial_extrinsic_cal" type="service_node" name="calibration_service_node" output="screen" >
   <param name="yaml_file_path" value="$(arg cal_pkg_path)/yaml/" />
   <param name="store_results_package_name" value="$(arg cal_pkg_name)" />
   
   <rosparam>
     camera_file: "camera_scene_cameras.yaml"
     target_file: "calibration_target_7x5_double_sized.yaml"
     cal_job_file: "camera_scene_caljob.yaml"
     store_results_file_name: "camera_scene_transforms.launch"
   </rosparam>
  </node>

  <node  name="mutable_joint_state_publisher" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" >
    <param name="mutable_joint_state_yaml_file" value="$(arg cal_pkg_path)/yaml/camera_scene_mutable_joint_states.yaml" />
  </node>

  
  <!-- tf and joint state publishers -->
  <group ns="$(arg camera_ns)" >
    <!-- Load robot description -->
    <param name="robot_description" textfile="$(arg urdf_path)" />

    <!-- Launch robot state/joint state publishers for camera and target -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
      <param name="publish_frequency" value="50" />
    </node>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <rosparam param="source_list">[/mutable_joint_states]</rosparam>
    </node>

    <!-- Launch Rviz -->
    <group  if="$(arg gui)">
      <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg cal_pkg_path)/config/kinect_calibration.rviz" required ="true"/>
    </group>
  </group>
    <node pkg="tf" type="static_transform_publisher" name="t2_frame" args="0.280 0 0 0 0 0 target_frame t2_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="t3_frame" args="0 .420 0 0 0 0 target_frame t3_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="t4_frame" args="0.280 0.420  0 0 0 0 target_frame t4_frame 100" />

</launch>
