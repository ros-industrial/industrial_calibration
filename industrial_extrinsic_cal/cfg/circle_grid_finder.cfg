#!/usr/bin/env python
PACKAGE = "industrial_extrinsic_cal"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("filter_by_area",        bool_t,   0, "filter blobs by their area", True)
gen.add("filter_by_color",       bool_t,   0, "filter blobs by their color", False)
gen.add("filter_by_circularity", bool_t,   0, "filter blobs by their circularity", False)
gen.add("filter_by_convexity",   bool_t,   0, "filter blobs by their convexity", False)
gen.add("filter_by_inertia",     bool_t,   0, "filter blobs by their aspect ration", False)
gen.add("min_repeatability",     int_t,    0, "Minimum repeatability", 2, 1, 8)
gen.add("min_area",              int_t,    0, "Minimum area of a blob", 25, 1, 5000)
gen.add("max_area",              int_t,    0, "Maximum area of a blob", 600, 1, 80000)
gen.add("min_circularity",       double_t, 0, "The min aspect ratio necessary to be a circlular blob", 0.0, .1, 1.0)
gen.add("max_circularity",       double_t, 0, "The max aspect ratio necessary to be a circlular blob", 0.5, .75, 1.0)
gen.add("min_threshold",         int_t,    0, "The contrast minimum threshold to be a blob", 10, 1, 1000)
gen.add("max_threshold",         int_t,    0, "The contrast maximum threshold to be a blob", 65, 1, 1000)
gen.add("min_distance",          double_t, 0, "The min distance between blobs", 5.0, 1.0, 500)
gen.add("min_radius_diff",       double_t, 0, "The min radius difference between blobs", 10.0, 1.0, 500)
gen.add("min_convexity",         double_t, 0, "The mininum convexity", 0.0, 0.1, 1.0)
gen.add("max_convexity",         double_t, 0, "The maximum convexity", 0.0, 0.99, 1.0)
gen.add("min_inertia_ratio",     double_t, 0, "The minimum inertial ratio", 0.0, 0.1, 1.0)
gen.add("max_inertia_ratio",     double_t, 0, "The maximum inertial ratio", 0.0, 0.99, 1.0)

exit(gen.generate(PACKAGE, "industrial_extrinsic_cal_node", "circle_grid_finder"))
